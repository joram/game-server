{"version":3,"sources":["components/base_object.js","components/background.js","components/player.js","App.js","serviceWorker.js","index.js"],"names":["BaseObject","x","this","props","y","squaresTall","Math","ceil","window","innerHeight","squaresWide","innerWidth","offsetX","playerPosition","floor","offsetY","style","position","width","size","height","zIndex","left","top","children","React","Component","Square","pixel","g","p","color","r","b","isSolid","backgroundColor","Squares","state","pixels","squares","x1","x2","y1","y2","url","console","log","fetch","then","res","json","setState","forEach","push","key","updateSquares","overflow","Circle","s","borderRadius","Player","nextPlayerPosition","debouncedMovePlayer","_","debounce","e","wait","movePlayer","leading","maxWait","move","offset","includes","current","isSolidAt","x_units","round","y_units","as","app","setPlayerPosition","handleKeys","onKeyEvent","GameObject","object","solid","src","image","alt","type","Chunk","hasGotObjects","chunk","getObjects","objectComponents","objects","undefined","o","id","App","createRef","player","ref","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.03d8288a.chunk.js","sourcesContent":["import React from \"react\";\n\nclass BaseObject extends React.Component {\n\n    render() {\n        let x = this.props.x\n        let y = this.props.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n        return <div style={{\n            position: \"absolute\",\n            width: size+\"px\",\n            height: size+\"px\",\n            zIndex: this.props.zIndex,\n            left: size*(x+offsetX)+\"px\",\n            top: size*(y+offsetY)+\"px\",\n        }}>\n            {this.props.children}\n        </div>\n    }\n}\n\nexport default BaseObject;","import React from \"react\";\nimport BaseObject from \"./base_object\";\n\nclass Square extends React.Component {\n\n    isSolid(){\n        return this.props.pixel.g > 180\n    }\n\n    render() {\n        let p = this.props.pixel\n        let color = `rgb(${p.r}, ${p.g}, ${p.b})`\n        if (this.isSolid()) {\n            color = `rgb(0, 80, 0)`\n        }\n\n        return <BaseObject x={p.x} y={p.y} playerPosition={this.props.playerPosition}>\n            <div style={{\n                width: \"100%\",\n                height: \"100%\",\n                backgroundColor: color\n            }}>\n                {/*({p.x}, {p.y})*/}\n            </div>\n        </BaseObject>\n    }\n}\n\nclass Squares extends React.Component {\n\n    state = {\n        pixels: [],\n        squares: [],\n        playerPosition: {x:-99, y:-99}\n    }\n\n    updateSquares() {\n        if ( Math.floor(this.props.playerPosition.x) ===  Math.floor(this.state.playerPosition.x) &&\n            Math.floor(this.props.playerPosition.y) ===  Math.floor(this.state.playerPosition.y)){\n            return\n        }\n\n\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let x1 = Math.floor(this.props.playerPosition.x) - Math.floor(squaresWide/2)\n        let x2 = Math.floor(this.props.playerPosition.x) + Math.ceil(squaresWide/2) + 2\n        let y1 = Math.floor(this.props.playerPosition.y) - Math.floor(squaresTall/2)\n        let y2 = Math.floor(this.props.playerPosition.y) + Math.ceil(squaresTall/2) + 2\n        let url = `http://localhost:2303/pixels?x1=${x1-1}&y1=${y1}&x2=${x2}&y2=${y2+1}`\n        console.log(url)\n        fetch(url)\n            .then(res => res.json())\n            .then(pixels => {\n                let state = this.state\n                state.pixels = pixels\n                state.playerPosition.x = this.props.playerPosition.x\n                state.playerPosition.y = this.props.playerPosition.y\n                this.setState(state)\n            });\n    }\n\n    squares() {\n        let squares = [];\n        this.state.pixels.forEach(pixel => {\n            squares.push(<Square\n                key={pixel.x+\"_\"+pixel.y}\n                pixel={pixel}\n                playerPosition={this.props.playerPosition}\n            />)\n        })\n        return squares\n    }\n\n    isSolidAt(position){\n        let isSolid = false;\n        this.state.pixels.forEach((p) => {\n            if (p.x === Math.ceil(position.x) && p.y === Math.ceil(position.y) ){\n                isSolid = p.g > 180\n            }\n        })\n        return isSolid\n    }\n\n    render() {\n        this.updateSquares()\n        return (\n            <div style={{\n                overflow:\"hidden\",\n                position:\"absolute\",\n                backgroundColor:\"red\",\n                width:\"100%\",\n                height:\"100%\",\n            }}>\n                {this.squares()}\n            </div>\n        );\n    }\n}\n\nexport default Squares","import BaseObject from \"./base_object\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\n\nfunction Circle(props) {\n    let s = props.size;\n    return <BaseObject x={props.x} y={props.y} playerPosition={props.playerPosition} zIndex={10}>\n        <div style={{\n            backgroundColor: \"black\",\n            borderRadius: \"50%\",\n            width: s + \"px\",\n            height: s + \"px\",\n        }} />\n    </BaseObject>\n}\n\nclass Player extends React.Component {\n\n    state = {\n        playerPosition: {x: 0, y: 0},\n        nextPlayerPosition: {x: 0, y: 0}\n    }\n\n\n    movePlayer(key, e) {\n        let offset = 0.2\n        let nextPlayerPosition = {x: this.state.playerPosition.x, y: this.state.playerPosition.y}\n\n        function move(position, key, offset) {\n            if ([\"left\",\"a\"].includes(key)) {\n                position.x -= offset\n            }\n            if (key === \"right\" || key === \"d\") {\n                position.x += offset\n            }\n            if (key === \"up\" || key === \"w\") {\n                position.y -= offset\n            }\n            if (key === \"down\" || key === \"s\") {\n                position.y += offset\n            }\n\n            return position\n        }\n\n        if([\"left\", \"a\", \"up\", \"w\"].includes(key)) {\n            nextPlayerPosition = move(nextPlayerPosition, key, 1)\n        }\n        nextPlayerPosition = move(nextPlayerPosition, key, offset/2)\n        let isSolid = this.props.squares.current.isSolidAt(nextPlayerPosition)\n\n        nextPlayerPosition = move(nextPlayerPosition, key, offset/2)\n        if([\"left\", \"a\", \"up\", \"w\"].includes(key)) {\n            nextPlayerPosition = move(nextPlayerPosition, key, -1)\n        }\n\n        let x_units = Math.round(nextPlayerPosition.x/offset)\n        let y_units = Math.round(nextPlayerPosition.y/offset)\n        nextPlayerPosition.x = x_units*offset\n        nextPlayerPosition.y = y_units*offset\n        console.log(nextPlayerPosition)\n\n\n        if(!isSolid){\n            let state = this.state\n            state.playerPosition = nextPlayerPosition\n            state.nextPlayerPosition = nextPlayerPosition\n            this.setState(state)\n\n            // let ss = this.props.squares.current.state;\n            // ss.playerPosition = nextPlayerPosition\n            // this.props.squares.current.setState(ss)\n\n            let as = this.props.app.state;\n            as.playerPosition = nextPlayerPosition\n            this.props.app.setState(as)\n            this.props.app.setPlayerPosition(nextPlayerPosition)\n        }\n    }\n\n    debouncedMovePlayer = _.debounce( (key, e, wait) => {\n        this.movePlayer(key, e)\n    }, 150, {leading:true, maxWait:150})\n\n    render(){\n        return <>\n            <Circle\n                x={this.state.playerPosition.x}\n                y={this.state.playerPosition.y}\n                playerPosition={this.state.playerPosition} size={this.props.size}/>\n            <KeyboardEventHandler\n                handleKeys={[\"left\", \"right\", \"up\", \"down\", \"w\", \"a\", \"s\", \"d\"]}\n                onKeyEvent={(key, e) => {\n                    this.debouncedMovePlayer(key, e, 100)\n                }}\n            />\n            { this.props.children }\n        </>\n    }\n}\n\nexport default Player","import React from 'react';\nimport './App.css';\nimport Squares from \"./components/background\";\nimport Player from \"./components/player\";\n\nclass GameObject extends React.Component {\n\n    isSolid(){\n        return this.props.object.solid\n    }\n\n    render() {\n        let p = this.props.object\n        let s = this.props.size\n        let x = p.x\n        let y = p.y\n\n        return <div style={{\n            position: \"absolute\",\n            width: s+\"px\",\n            height: s+\"px\",\n            zIndex: this.props.zIndex,\n            left:s*x+this.props.offsetX+\"px\",\n            top:s*y+this.props.offsetY+\"px\",\n        }}>\n            <img src={this.props.object.image} alt={this.props.object.type} />\n        </div>\n    }\n}\n\nclass Chunk extends React.Component {\n\n    state = {}\n    hasGotObjects = false\n    getObjects() {\n        if (this.hasGotObjects) {return}\n\n        let url = `http://localhost:2303/chunks?x=${this.props.x}&y=${this.props.y}`\n        fetch(url)\n            .then(res => res.json())\n            .then(chunk => {\n                let state = this.state\n                state.chunk = chunk\n                this.setState(state)\n                this.hasGotObjects = true\n            });\n    }\n\n    render() {\n        this.getObjects()\n        if (!this.hasGotObjects) {\n            return <div/>\n        }\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let x1 = this.props.playerPosition.x - Math.floor(squaresWide/2)\n        let y1 = this.props.playerPosition.y - Math.floor(squaresTall/2)\n        let objectComponents = [];\n\n        let objects = this.state.chunk.objects;\n        if(objects === {} || objects === undefined){\n            objects = [];\n        }\n        objects.forEach(o => {\n            objectComponents.push(<GameObject\n                object={o}\n                key={o.id}\n                size={size}\n                offsetX={-x1*size}\n                offsetY={(-y1-1)*size}\n            />)\n        })\n        return <div style={{\n            zIndex: \"1\",\n            position: \"absolute\",\n        }}>\n            {objectComponents}\n        </div>\n    }\n}\n\n\nclass App extends React.Component {\n\n    state = {}\n\n    constructor(props) {\n        super(props);\n        this.squares = React.createRef();\n        this.player = React.createRef();\n    }\n\n    playerPosition() {\n        if(this.player.current===null){\n            return {x:0, y:0}\n        }\n        return this.player.current.state.playerPosition\n        // console.log(this.player.current.state.playerPosition)\n        // return {x:0, y:0}\n    }\n\n    setPlayerPosition(p) {\n        console.log(\"setting player pos\", p)\n    }\n\n    render() {\n        let size = 50;\n        return <div>\n            <Player size={size} squares={this.squares} ref={this.player} app={this}>\n            </Player>\n            <Chunk x={0} y={0} playerPosition={this.playerPosition()} />\n            <Squares playerPosition={this.playerPosition()}  ref={this.squares}/>\n        </div>;\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}