{"version":3,"sources":["components/base_object.js","components/player.js","components/background.js","components/objects.js","components/chat.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","Player","state","playerPosition","x","y","nextPlayerPosition","ws","WebSocket","debouncedMovePlayer","_","debounce","key","e","wait","movePlayer","leading","maxWait","s","this","console","log","send","onopen","sendPlayerCoordinates","onmessage","evt","message","JSON","parse","data","props","objectEventBus","emit","onclose","move","position","offset","includes","isSolid","background","current","isSolidAt","objects","x_units","Math","round","y_units","setState","as","app","updateChunks","handleKeys","onKeyEvent","children","Square","pixel","g","p","color","r","b","style","width","height","left","chunkPosition","top","backgroundColor","Chunk","SIZE","chunk","pixels","forEach","push","squaresTall","ceil","window","innerHeight","squaresWide","innerWidth","offsetX","floor","offsetY","className","border","size","backgroundSquares","Background","CHUNKSIZE","chunkData","undefined","url","fetch","then","res","json","pp","minX","minY","maxX","maxY","chunksWide","chunksTall","xIndex","Array","keys","yIndex","requestChunk","solid","chunks","Object","id","GameObject","object","on","zIndex","src","image","alt","type","Objects","action","values","player","o","uuidv4","require","v4","ChatMessage","from","substr","Chat","messages","text","msg","preventDefault","event","target","value","i","onSubmit","sendMessage","bind","bottom","onChange","textChange","App","createRef","ref","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d4f64d86.chunk.js","sourcesContent":["import React from \"react\";\n\nclass BaseObject extends React.Component {\n\n    render() {\n        let x = this.props.x\n        let y = this.props.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n        return <div style={{\n            position: \"absolute\",\n            width: size+\"px\",\n            height: size+\"px\",\n            zIndex: this.props.zIndex,\n            left: size*(x+offsetX)+\"px\",\n            top: size*(y+offsetY)+\"px\",\n        }}>\n            {this.props.children}\n        </div>\n    }\n}\n\nexport default BaseObject;","import BaseObject from \"./base_object\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\n\nfunction Circle(props) {\n    let s = props.size;\n    return <BaseObject x={props.x} y={props.y} playerPosition={props.playerPosition} zIndex={10}>\n        <div style={{\n            backgroundColor: \"black\",\n            borderRadius: \"50%\",\n            width: s + \"px\",\n            height: s + \"px\",\n        }} />\n    </BaseObject>\n}\n\nclass Player extends React.Component {\n\n    state = {\n        playerPosition: {x: 0, y: 0},\n        nextPlayerPosition: {x: 0, y: 0}\n    }\n\n    ws = new WebSocket(\"ws://localhost:2303/objects\")\n\n    sendPlayerCoordinates(){\n        let s = `{\"x\":${this.state.playerPosition.x}, \"y\":${this.state.playerPosition.y}}`\n        console.log(s)\n        this.ws.send(s)\n    }\n\n    componentDidMount() {\n        this.ws.onopen = () => {\n            // on connecting, do nothing but log it to the console\n            console.log('connected to objects ws')\n            this.sendPlayerCoordinates()\n        }\n\n        this.ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const message = JSON.parse(evt.data)\n            this.props.objectEventBus.emit(\"object-update\", null, message)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n        }\n    }\n\n    movePlayer(key, e) {\n        let offset = 1\n        let nextPlayerPosition = {x: this.state.playerPosition.x, y: this.state.playerPosition.y}\n\n        function move(position, key, offset) {\n            if ([\"left\",\"a\"].includes(key)) {\n                position.x -= offset\n            }\n            if (key === \"right\" || key === \"d\") {\n                position.x += offset\n            }\n            if (key === \"up\" || key === \"w\") {\n                position.y -= offset\n            }\n            if (key === \"down\" || key === \"s\") {\n                position.y += offset\n            }\n\n            return position\n        }\n\n        if([\"left\", \"a\", \"up\", \"w\"].includes(key)) {\n            nextPlayerPosition = move(nextPlayerPosition, key, 1)\n        }\n        nextPlayerPosition = move(nextPlayerPosition, key, offset/2)\n        let isSolid = this.props.background.current.isSolidAt(nextPlayerPosition)\n        isSolid = isSolid || this.props.objects.current.isSolidAt(nextPlayerPosition)\n\n        nextPlayerPosition = move(nextPlayerPosition, key, offset/2)\n        if([\"left\", \"a\", \"up\", \"w\"].includes(key)) {\n            nextPlayerPosition = move(nextPlayerPosition, key, -1)\n        }\n\n        let x_units = Math.round(nextPlayerPosition.x/offset)\n        let y_units = Math.round(nextPlayerPosition.y/offset)\n        nextPlayerPosition.x = x_units*offset\n        nextPlayerPosition.y = y_units*offset\n\n        if(!isSolid){\n            let state = this.state\n            state.playerPosition = nextPlayerPosition\n            state.nextPlayerPosition = nextPlayerPosition\n            this.setState(state)\n\n            // let ss = this.props.squares.current.state;\n            // ss.playerPosition = nextPlayerPosition\n            // this.props.squares.current.setState(ss)\n\n            let as = this.props.app.state;\n            as.playerPosition = nextPlayerPosition\n            this.props.app.setState(as)\n\n            this.sendPlayerCoordinates()\n            this.props.background.current.updateChunks()\n        }\n    }\n\n    debouncedMovePlayer = _.debounce( (key, e, wait) => {\n        this.movePlayer(key, e)\n    }, 350, {leading:true, maxWait:350})\n\n    render(){\n        return <>\n            {/*<Circle*/}\n            {/*    x={this.state.playerPosition.x}*/}\n            {/*    y={this.state.playerPosition.y}*/}\n            {/*    playerPosition={this.state.playerPosition} size={this.props.size}/>*/}\n            <KeyboardEventHandler\n                handleKeys={[\"left\", \"right\", \"up\", \"down\", \"w\", \"a\", \"s\", \"d\"]}\n                onKeyEvent={(key, e) => {\n                    this.debouncedMovePlayer(key, e, 100)\n                }}\n            />\n            { this.props.children }\n        </>\n    }\n}\n\nexport default Player","import React from \"react\";\n\nclass Square extends React.Component {\n\n    isSolid(){\n        return this.props.pixel.g > 180\n    }\n\n    render() {\n        let p = this.props.pixel\n        let color = `rgb(${p.r}, ${p.g}, ${p.b})`\n        if (this.isSolid()) {\n            color = `rgb(0, 80, 0)`\n        }\n        return <div style={{\n                width: \"50px\",\n                height: \"50px\",\n                left: `${50*(p.x-this.props.chunkPosition.x)}px`,\n                top: `${50*(p.y-this.props.chunkPosition.y)}px`,\n                backgroundColor: color,\n                position: \"absolute\"\n            }}>\n                {/*({p.x}, {p.y})*/}\n            </div>\n    }\n}\n\nclass Chunk extends React.Component {\n    SIZE = 50;\n    chunk = {}\n    state = {}\n\n    backgroundSquares() {\n        let pixels = []\n        // if(this.chunk.pixels === null || this.chunk.pixels === undefined) { return [] }\n        this.props.data.pixels.forEach(pixel => {\n\n            pixels.push(<Square\n                key={pixel.x+\"_\"+pixel.y}\n                pixel={pixel}\n                chunkPosition={{x:this.props.data.x, y:this.props.data.y}}\n                playerPosition={this.props.playerPosition}\n            />)\n        })\n        return pixels\n    }\n\n    render() {\n        let x = this.props.x\n        let y = this.props.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n\n        return <div className=\"chunk\" style={{\n            // zIndex: \"0\",\n            position: \"absolute\",\n            border:\"solid thin black\",\n            width: `${this.SIZE*this.chunk.size}px`,\n            height: `${this.SIZE*this.chunk.size}px`,\n            backgroundColor: \"pink\",\n            left: size*(x+offsetX)+\"px\",\n            top: size*(y+offsetY)+\"px\",\n\n        }}>\n            <div className=\"squares\">{this.backgroundSquares()}</div>\n        </div>\n    }\n}\n\nclass Background extends React.Component {\n\n    CHUNKSIZE = 10\n\n    state = {\n        playerPosition: {x:-99, y:-99},\n        chunkData: {},\n    }\n\n    componentDidMount(props) {\n        this.updateChunks()\n    }\n\n    requestChunk(x, y) {\n        if (this.state.chunkData[`${x}_${y}`] !== undefined ){\n            return\n        }\n\n        // so we don't request again\n        let state = this.state\n        state.chunkData[`${x}_${y}`] = {pixels:[], objects:[]}\n        this.setState(state)\n\n        let url = `http://localhost:2303/chunks?x=${x}&y=${y}`\n        fetch(url)\n            .then(res => res.json())\n            .then(chunkData => {\n                let state = this.state\n                state.chunkData[`${x}_${y}`] = chunkData\n                this.setState(state)\n            });\n    }\n\n    updateChunks(){\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n\n        let pp = this.playerPosition()\n        let minX = Math.floor(pp.x - squaresWide/2)\n        let minY = Math.floor(pp.y - squaresTall/2)\n        let maxX = Math.ceil(pp.x + squaresWide/2)\n        let maxY = Math.ceil(pp.y + squaresTall/2)\n\n        minX = minX - minX%this.CHUNKSIZE - this.CHUNKSIZE\n        minY = minY - minY%this.CHUNKSIZE - this.CHUNKSIZE\n        maxX = maxX + maxX%this.CHUNKSIZE + this.CHUNKSIZE\n        maxY = maxY + maxY%this.CHUNKSIZE + this.CHUNKSIZE\n\n        let chunksWide = Math.ceil((maxX-minX)/this.CHUNKSIZE)\n        let chunksTall = Math.ceil((maxY-minY)/this.CHUNKSIZE)\n\n        let xIndex = [...Array(chunksWide).keys()]\n        let yIndex = [...Array(chunksTall).keys()]\n        xIndex.forEach(x => {\n            yIndex.forEach(y => {\n                if (this.state.chunkData[`${x}_${y}`] === undefined ){\n                    this.requestChunk(minX+x*this.CHUNKSIZE,minY+y*this.CHUNKSIZE)\n                }\n           })\n        })\n    }\n\n    playerPosition() {\n        return this.props.app.playerPosition()\n    }\n\n    isSolidAt(p){\n\n        let x = Math.floor(p.x/this.CHUNKSIZE)*this.CHUNKSIZE\n        let y = Math.floor(p.y/this.CHUNKSIZE)*this.CHUNKSIZE\n        let chunk = this.state.chunkData[`${x}_${y}`]\n        if(chunk === undefined) {\n            return false\n        }\n        let solid = false\n\n        chunk.pixels.forEach(pixel => {\n            if(Math.ceil(p.x) === pixel.x && Math.ceil(p.y) === pixel.y){\n                if(pixel.g > 180){\n                    solid = true\n                }\n            }\n        })\n\n        // chunk.objects.forEach(object => {\n        //     if(Math.ceil(p.x) === object.x && Math.ceil(p.y) === object.y){\n        //          if(object.solid){\n        //             solid = true\n        //         }\n        //     }\n        // })\n\n        return solid\n    }\n\n    render() {\n        let chunks = [];\n        let keys = Object.keys(this.state.chunkData)\n        keys.forEach(key => {\n            let chunkData = this.state.chunkData[key]\n            let chunk = <Chunk\n                x={chunkData.x}\n                y={chunkData.y}\n                key={key}\n                playerPosition={this.playerPosition()}\n                data={chunkData}\n                objectEventBus={this.props.objectEventBus}\n            />;\n            chunks.push(chunk)\n        })\n\n        return (<div id=\"chunks\">\n            {chunks}\n        </div>);\n    }\n}\n\nexport default Background","import React from \"react\";\n\nclass GameObject extends React.Component {\n\n    state = {\n        object: {x:0, y:0}\n    }\n\n    isSolid(){\n        return this.props.object.solid\n    }\n\n    constructor(props) {\n        super(props);\n        this.state.object = props.object\n    }\n\n    componentDidMount(){\n        this.props.objectEventBus.on(\"object-update\", object => {\n            if(this.props.id === object.id){\n                let state = this.state\n                state.object = object\n                this.setState(state)\n            }\n        })\n    }\n\n    render() {\n        let p = this.state.object\n        let s = this.props.size\n        let x = p.x\n        let y = p.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n\n\n        return <div style={{\n            position: \"absolute\",\n            width: s+\"px\",\n            height: s+\"px\",\n            zIndex: this.props.zIndex,\n            left:s*(x+offsetX)+\"px\",\n            top:s*(y+offsetY)+\"px\",\n        }}>\n            <img style={{width:`${s}px`, height:`${s}px`}} src={this.props.object.image} alt={this.props.object.type} />\n        </div>\n    }\n}\n\nclass Objects extends React.Component {\n    SIZE = 50\n\n    state = {\n        objects: {}\n    }\n\n    componentDidMount(){\n        this.props.objectEventBus.on(\"object-update\", object => {\n            console.log(object)\n            let state = this.state\n            if (object.action === \"remove\") {\n                delete state.objects[object.id]\n            } else {\n                state.objects[object.id] = object\n            }\n            this.setState(state)\n        })\n    }\n\n    isSolidAt(p){\n        let solid = false\n        Object.values(this.state.objects).forEach(object => {\n            if(Math.ceil(p.x) === object.x && Math.ceil(p.y) === object.y){\n                 if(object.solid){\n                     solid = true\n                }\n            }\n        })\n\n        return solid\n    }\n\n    render() {\n\n        let playerPosition = {x:0, y:0}\n        if(this.props.player.current !== null){\n            playerPosition = this.props.player.current.state.playerPosition\n        }\n\n        let objects = [];\n        Object.values(this.state.objects).forEach(o => {\n            objects.push(<GameObject\n                object={o}\n                key={o.id}\n                id={o.id}\n                size={this.SIZE}\n                objectEventBus={this.props.objectEventBus}\n                playerPosition={playerPosition}\n            />)\n        })\n        return <div className=\"objects\">\n            {objects}\n        </div>\n    }\n\n\n}\n\nexport default Objects","import React from \"react\";\n\nconst { v4: uuidv4 } = require('uuid');\n\nclass ChatMessage extends React.Component {\n\n    render(){\n        return <div className=\"chat_message\" style={{color:\"white\"}}>{this.props.message.from.substr(1, 6)}: {this.props.message.message}</div>\n    }\n}\n\nclass Chat extends React.Component {\n    id = uuidv4();\n    ws = new WebSocket(\"ws://localhost:2303/chat\")\n    state = {\n        messages: [],\n        text: \"\",\n    }\n\n    componentDidMount() {\n        this.ws.onopen = () => {\n            // on connecting, do nothing but log it to the console\n            this.ws.send(`{\"id\":\"${this.id}\", \"message\":\"logged in\"}`)\n        }\n\n        this.ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const message = JSON.parse(evt.data)\n            let state = this.state\n            state.messages.push(message)\n            this.setState(state)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n        }\n    }\n\n    sendMessage(e, msg){\n        e.preventDefault();\n        console.log(this.state.text)\n        this.ws.send(`{\"id\":\"${this.id}\", \"message\":\"${this.state.text}\"}`)\n        let state = this.state\n        state.text = \"\"\n        this.setState(state)\n    }\n\n    textChange(event) {\n        let state = this.state\n        state.text = event.target.value\n        this.setState(state)\n    }\n\n    render(){\n        let messages = [];\n        this.state.messages.forEach((msg, i) => {\n            messages.push(<ChatMessage key={`msg_${i}`} message={msg} />)\n        })\n\n        return <div style={{\n            width:\"300px\",\n            height:\"500px\",\n            backgroundColor: \"rgba(20,20,20,0.8)\",\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n        }} >\n            <div style={{color:\"white\"}}>{this.id.substr(1, 6)}</div>\n            <div>\n                {messages}\n            </div>\n            <form onSubmit={this.sendMessage.bind(this)}>\n                <input type=\"text\"\n                       style={{\n                           bottom: \"6px\",\n                           left: \"5px\",\n                           width: \"185px\",\n                           position: \"absolute\"\n                       }}\n                       onChange={this.textChange.bind(this)}\n                       value={this.state.text}\n                />\n            </form>\n        </div>\n    }\n}\n\nexport default Chat","import React from 'react';\nimport './App.css';\nimport Player from \"./components/player\";\nimport Background from \"./components/background\";\nimport Objects from \"./components/objects\";\nimport Chat from \"./components/chat\";\n\n\nclass App extends React.Component {\n\n    state = {}\n\n    constructor(props) {\n        super(props);\n        this.background = React.createRef();\n        this.objects = React.createRef();\n        this.player = React.createRef();\n        this.objectEventBus = require('js-event-bus')();\n    }\n\n    playerPosition() {\n        if(this.player.current===null){\n            return {x:0, y:0}\n        }\n        return this.player.current.state.playerPosition\n    }\n\n    render() {\n        let size = 50;\n        return <div>\n            <Player size={size} background={this.background} objects={this.objects} ref={this.player} app={this} objectEventBus={this.objectEventBus} />\n            <Background size={size} ref={this.background} app={this}/>\n            <Objects size={size} objectEventBus={this.objectEventBus} player={this.player} ref={this.objects} />\n            <Chat/>\n        </div>;\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}