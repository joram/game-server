{"version":3,"sources":["utils.js","components/player.js","components/background.js","components/objects.js","components/chat.js","App.js","serviceWorker.js","index.js"],"names":["hostname","window","location","href","split","ws_prefix","http_prefix","Player","state","id","undefined","playerPosition","x","y","debouncedMovePlayer","_","debounce","key","e","wait","movePlayer","leading","maxWait","a","s","this","ws","send","d","url","console","log","WebSocket","onopen","sendAccessToken","props","accessToken","googleId","onmessage","evt","message","JSON","parse","data","playerId","setState","objectEventBus","emit","nextPlayerPosition","type","background","current","updateChunks","as","app","onclose","sendPlayerMove","handleKeys","onKeyEvent","children","React","Component","Square","pixel","g","p","color","r","b","isSolid","style","width","height","left","chunkPosition","top","backgroundColor","position","Chunk","SIZE","chunk","pixels","forEach","push","squaresTall","Math","ceil","innerHeight","squaresWide","innerWidth","offsetX","floor","offsetY","className","border","size","backgroundSquares","Background","CHUNKSIZE","chunkData","objects","fetch","then","res","json","pp","minX","minY","maxX","maxY","chunksWide","chunksTall","xIndex","Array","keys","yIndex","requestChunk","solid","chunks","Object","GameObject","object","on","images","src","length","alt","zIndex","Objects","action","values","makeObject","o","player","uuidv4","require","v4","ChatMessage","from","substr","Chat","messages","text","msg","preventDefault","event","target","value","i","onSubmit","sendMessage","bind","bottom","onChange","textChange","App","createRef","margin","paddingTop","clientId","onSuccess","loginSuccess","isSignedIn","ref","renderLogin","renderGame","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.76b3596c.chunk.js","sourcesContent":["function hostname() {\n    let hostname = window.location.href.split(\"/\")[2]\n    if(hostname===\"localhost:3000\"){\n        return \"localhost:2305\"\n    }\n    return hostname\n}\n\nfunction ws_prefix() {\n    if(hostname()===\"localhost:2305\"){\n        return \"ws\"\n    }\n    return \"wss\"\n}\n\nfunction http_prefix() {\n    if(hostname()===\"localhost:2305\"){\n        return \"http\"\n    }\n    return \"https\"\n}\n\nexport {hostname, ws_prefix, http_prefix}","import React from \"react\";\nimport _ from \"lodash\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport {hostname, ws_prefix} from \"../utils\";\n\nclass Player extends React.Component {\n\n    state = {\n        id: undefined,\n        playerPosition: {x: 0, y: 0},\n        // nextPlayerPosition: {x: 0, y: 0}\n    }\n\n    sendAccessToken(a,id){\n        let s = `{\"accessToken\":\"${a}\", \"googleId\":\"${id}\"}`\n        this.ws.send(s)\n    }\n\n\n    sendPlayerMove(d){\n        let s = `{\"direction\":\"${d}\"}`\n        this.ws.send(s)\n    }\n\n    componentDidMount() {\n        let url = `${ws_prefix()}://${hostname()}/objects`\n        console.log(url)\n        this.ws = new WebSocket(url)\n\n        this.ws.onopen = () => {\n            // on connecting, do nothing but log it to the console\n            console.log('connected to objects ws')\n            this.sendAccessToken(this.props.accessToken, this.props.googleId)\n            // this.sendPlayerCoordinates(this.state.playerPosition)\n        }\n\n        this.ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const message = JSON.parse(evt.data)\n\n            let playerId = message[\"playerId\"]\n            if(playerId !== undefined) {\n                let state = this.state\n                state.id = playerId\n                this.setState(state)\n\n            } else{\n                this.props.objectEventBus.emit(\"object-update\", null, message)\n                if(message[\"id\"] === this.state.id) {\n                    let state = this.state\n                    state.playerPosition.x = message[\"x\"]\n                    state.playerPosition.y = message[\"y\"]\n                    this.setState(state)\n                }\n\n            }\n\n\n            let state = this.state\n            let nextPlayerPosition = state.playerPosition\n            if(message.type===\"player\"){\n                state.playerPosition = nextPlayerPosition\n                state.nextPlayerPosition = nextPlayerPosition\n                this.setState(state)\n                this.props.background.current.updateChunks()\n\n                let as = this.props.app.state;\n                as.playerPosition = nextPlayerPosition\n                this.props.app.setState(as)\n            }\n\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n        }\n    }\n\n    movePlayer(key, e) {\n        if (key === \"w\") key = \"up\"\n        if (key === \"a\") key = \"left\"\n        if (key === \"s\") key = \"down\"\n        if (key === \"d\") key = \"right\"\n\n        this.props.background.current.updateChunks()\n        this.sendPlayerMove(key)\n    }\n\n    debouncedMovePlayer = _.debounce( (key, e, wait) => {\n        this.movePlayer(key, e)\n    }, 350, {leading:true, maxWait:350})\n\n    render(){\n        return <>\n            {/*<Circle*/}\n            {/*    x={this.state.playerPosition.x}*/}\n            {/*    y={this.state.playerPosition.y}*/}\n            {/*    playerPosition={this.state.playerPosition} size={this.props.size}/>*/}\n            <KeyboardEventHandler\n                handleKeys={[\"left\", \"right\", \"up\", \"down\", \"w\", \"a\", \"s\", \"d\"]}\n                onKeyEvent={(key, e) => {\n                    this.debouncedMovePlayer(key, e, 100)\n                }}\n            />\n            { this.props.children }\n        </>\n    }\n}\n\nexport default Player","import React from \"react\";\nimport {hostname, http_prefix} from \"../utils\";\n\nclass Square extends React.Component {\n\n    isSolid(){\n        return this.props.pixel.g > 180\n    }\n\n    render() {\n        let p = this.props.pixel\n        let color = `rgb(${p.r}, ${p.g}, ${p.b})`\n        if (this.isSolid()) {\n            color = `rgb(0, 80, 0)`\n        }\n        return <div style={{\n                width: \"50px\",\n                height: \"50px\",\n                left: `${50*(p.x-this.props.chunkPosition.x)}px`,\n                top: `${50*(p.y-this.props.chunkPosition.y)}px`,\n                backgroundColor: color,\n                position: \"absolute\"\n            }}>\n                {/*({p.x}, {p.y})*/}\n            </div>\n    }\n}\n\nclass Chunk extends React.Component {\n    SIZE = 50;\n    chunk = {}\n    state = {}\n\n    backgroundSquares() {\n        let pixels = []\n        // if(this.chunk.pixels === null || this.chunk.pixels === undefined) { return [] }\n        this.props.data.pixels.forEach(pixel => {\n\n            pixels.push(<Square\n                key={pixel.x+\"_\"+pixel.y}\n                pixel={pixel}\n                chunkPosition={{x:this.props.data.x, y:this.props.data.y}}\n                playerPosition={this.props.playerPosition}\n            />)\n        })\n        return pixels\n    }\n\n    render() {\n        let x = this.props.x\n        let y = this.props.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n\n        return <div className=\"chunk\" style={{\n            // zIndex: \"0\",\n            position: \"absolute\",\n            border:\"solid thin black\",\n            width: `${this.SIZE*this.chunk.size}px`,\n            height: `${this.SIZE*this.chunk.size}px`,\n            backgroundColor: \"pink\",\n            left: size*(x+offsetX)+\"px\",\n            top: size*(y+offsetY)+\"px\",\n\n        }}>\n            <div className=\"squares\">{this.backgroundSquares()}</div>\n        </div>\n    }\n}\n\nclass Background extends React.Component {\n\n    CHUNKSIZE = 10\n\n    state = {\n        playerPosition: {x:-99, y:-99},\n        chunkData: {},\n    }\n\n    componentDidMount(props) {\n        this.updateChunks()\n    }\n\n    requestChunk(x, y) {\n        if (this.state.chunkData[`${x}_${y}`] !== undefined ){\n            return\n        }\n\n        // so we don't request again\n        let state = this.state\n        state.chunkData[`${x}_${y}`] = {pixels:[], objects:[]}\n        this.setState(state)\n\n        let url = `${http_prefix()}://${hostname()}/chunks?x=${x}&y=${y}`\n        fetch(url)\n            .then(res => res.json())\n            .then(chunkData => {\n                let state = this.state\n                state.chunkData[`${x}_${y}`] = chunkData\n                this.setState(state)\n            });\n    }\n\n    updateChunks(){\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n\n        let pp = this.playerPosition()\n        let minX = Math.floor(pp.x - squaresWide/2)\n        let minY = Math.floor(pp.y - squaresTall/2)\n        let maxX = Math.ceil(pp.x + squaresWide/2)\n        let maxY = Math.ceil(pp.y + squaresTall/2)\n\n        minX = minX - minX%this.CHUNKSIZE - this.CHUNKSIZE\n        minY = minY - minY%this.CHUNKSIZE - this.CHUNKSIZE\n        maxX = maxX + maxX%this.CHUNKSIZE + this.CHUNKSIZE\n        maxY = maxY + maxY%this.CHUNKSIZE + this.CHUNKSIZE\n\n        let chunksWide = Math.ceil((maxX-minX)/this.CHUNKSIZE)\n        let chunksTall = Math.ceil((maxY-minY)/this.CHUNKSIZE)\n\n        let xIndex = [...Array(chunksWide).keys()]\n        let yIndex = [...Array(chunksTall).keys()]\n        xIndex.forEach(x => {\n            yIndex.forEach(y => {\n                if (this.state.chunkData[`${x}_${y}`] === undefined ){\n                    this.requestChunk(minX+x*this.CHUNKSIZE,minY+y*this.CHUNKSIZE)\n                }\n           })\n        })\n    }\n\n    playerPosition() {\n        return this.props.app.playerPosition()\n    }\n\n    isSolidAt(p){\n\n        let x = Math.floor(p.x/this.CHUNKSIZE)*this.CHUNKSIZE\n        let y = Math.floor(p.y/this.CHUNKSIZE)*this.CHUNKSIZE\n        let chunk = this.state.chunkData[`${x}_${y}`]\n        if(chunk === undefined) {\n            return false\n        }\n        let solid = false\n\n        chunk.pixels.forEach(pixel => {\n            if(Math.ceil(p.x) === pixel.x && Math.ceil(p.y) === pixel.y){\n                if(pixel.g > 180){\n                    solid = true\n                }\n            }\n        })\n\n        // chunk.objects.forEach(object => {\n        //     if(Math.ceil(p.x) === object.x && Math.ceil(p.y) === object.y){\n        //          if(object.solid){\n        //             solid = true\n        //         }\n        //     }\n        // })\n\n        return solid\n    }\n\n    render() {\n        let chunks = [];\n        let keys = Object.keys(this.state.chunkData)\n        keys.forEach(key => {\n            let chunkData = this.state.chunkData[key]\n            let chunk = <Chunk\n                x={chunkData.x}\n                y={chunkData.y}\n                key={key}\n                playerPosition={this.playerPosition()}\n                data={chunkData}\n                objectEventBus={this.props.objectEventBus}\n            />;\n            chunks.push(chunk)\n        })\n\n        return (<div id=\"chunks\">\n            {chunks}\n        </div>);\n    }\n}\n\nexport default Background","import React from \"react\";\nimport {hostname, http_prefix} from \"../utils\";\n\nclass GameObject extends React.Component {\n\n    state = {\n        object: {x:0, y:0}\n    }\n\n    isSolid(){\n        return this.props.object.solid\n    }\n\n    constructor(props) {\n        super(props);\n        this.state.object = props.object\n    }\n\n    componentDidMount(){\n        this.props.objectEventBus.on(\"object-update\", object => {\n            if(this.props.id === object.id){\n                let state = this.state\n                state.object = object\n                this.setState(state)\n            }\n        })\n    }\n\n    render() {\n        let p = this.state.object\n        let s = this.props.size\n        let x = p.x\n        let y = p.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n\n        let images = []\n        p.images.forEach(src => {\n            images.push(<img style={{\n                width: `${s}px`,\n                height: `${s}px`,\n                position: \"absolute\",\n                left: \"0px\",\n                top: \"0px\",\n            }}\n                 key={`${p.id}_img_${images.length}`}\n                 src={`${http_prefix()}://${hostname()}${src}`}\n                 alt={this.props.object.type}\n            />)\n\n        })\n        return <div style={{\n            position: \"absolute\",\n            width: s+\"px\",\n            height: s+\"px\",\n            zIndex: this.props.zIndex,\n            left:s*(x+offsetX)+\"px\",\n            top:s*(y+offsetY)+\"px\",\n        }}>\n            {images}\n        </div>\n    }\n}\n\nclass Objects extends React.Component {\n    SIZE = 50\n\n    state = {\n        objects: {}\n    }\n\n    componentDidMount(){\n        this.props.objectEventBus.on(\"object-update\", object => {\n            console.log(\"update:\", object)\n            let state = this.state\n            if (object.action === \"remove\") {\n                delete state.objects[object.id]\n            } else {\n                state.objects[object.id] = object\n            }\n            this.setState(state)\n        })\n    }\n\n    isSolidAt(p){\n        let solid = false\n        Object.values(this.state.objects).forEach(object => {\n            if(Math.ceil(p.x) === object.x && Math.ceil(p.y) === object.y){\n                 solid = solid || object.solid\n                 console.log(object)\n            }\n        })\n        console.log(solid)\n        return solid\n    }\n\n    render() {\n\n        let playerPosition = {x:0, y:0}\n        if(this.props.player.current !== null){\n            playerPosition = this.props.player.current.state.playerPosition\n        }\n\n        function makeObject(o, size, objectEventBus) {\n            return <GameObject\n                object={o}\n                key={o.id}\n                id={o.id}\n                size={size}\n                objectEventBus={objectEventBus}\n                playerPosition={playerPosition}\n            />\n        }\n\n        let objects = [];\n        Object.values(this.state.objects).forEach(o => {\n            if(o.type !== \"player\"){\n                objects.push(makeObject(o, this.SIZE, this.props.objectEventBus))\n            }\n        })\n        Object.values(this.state.objects).forEach(o => {\n            if(o.type === \"player\"){\n                objects.push(makeObject(o, this.SIZE, this.props.objectEventBus))\n            }\n        })\n        return <div className=\"objects\">\n            {objects}\n        </div>\n    }\n\n\n}\n\nexport default Objects","import React from \"react\";\nimport {hostname, ws_prefix} from \"../utils\";\n\nconst { v4: uuidv4 } = require('uuid');\n\nclass ChatMessage extends React.Component {\n\n    render(){\n        return <div className=\"chat_message\" style={{color:\"white\"}}>{this.props.message.from.substr(1, 6)}: {this.props.message.message}</div>\n    }\n}\n\nclass Chat extends React.Component {\n    id = uuidv4();\n    ws = new WebSocket(`${ws_prefix()}://${hostname()}/chat`)\n    state = {\n        messages: [],\n        text: \"\",\n    }\n\n    componentDidMount() {\n        this.ws.onopen = () => {\n            // on connecting, do nothing but log it to the console\n            this.ws.send(`{\"id\":\"${this.id}\", \"message\":\"logged in\"}`)\n        }\n\n        this.ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const message = JSON.parse(evt.data)\n            let state = this.state\n            state.messages.push(message)\n            this.setState(state)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n        }\n    }\n\n    sendMessage(e, msg){\n        e.preventDefault();\n        console.log(this.state.text)\n        this.ws.send(`{\"id\":\"${this.id}\", \"message\":\"${this.state.text}\"}`)\n        let state = this.state\n        state.text = \"\"\n        this.setState(state)\n    }\n\n    textChange(event) {\n        let state = this.state\n        state.text = event.target.value\n        this.setState(state)\n    }\n\n    render(){\n        let messages = [];\n        this.state.messages.forEach((msg, i) => {\n            messages.push(<ChatMessage key={`msg_${i}`} message={msg} />)\n        })\n\n        return <div style={{\n            width:\"300px\",\n            height:\"500px\",\n            backgroundColor: \"rgba(20,20,20,0.8)\",\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n        }} >\n            <div style={{color:\"white\"}}>you are {this.id.substr(1, 6)}</div>\n            <div>\n                {messages}\n            </div>\n            <form onSubmit={this.sendMessage.bind(this)}>\n                <input type=\"text\"\n                       style={{\n                           bottom: \"6px\",\n                           left: \"5px\",\n                           width: \"185px\",\n                           position: \"absolute\"\n                       }}\n                       onChange={this.textChange.bind(this)}\n                       value={this.state.text}\n                />\n            </form>\n        </div>\n    }\n}\n\nexport default Chat","import React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport './App.css';\nimport Player from \"./components/player\";\nimport Background from \"./components/background\";\nimport Objects from \"./components/objects\";\nimport Chat from \"./components/chat\";\n\n\nclass App extends React.Component {\n\n    state = {\n        accessToken: null,\n        googleId: null\n    }\n\n    constructor(props) {\n        super(props);\n        this.background = React.createRef();\n        this.objects = React.createRef();\n        this.player = React.createRef();\n        this.objectEventBus = require('js-event-bus')();\n    }\n\n    playerPosition() {\n        if(this.player.current===null){\n            return {x:0, y:0}\n        }\n        return this.player.current.state.playerPosition\n    }\n\n    loginSuccess(data){\n        let state = this.state\n        state.accessToken = data.accessToken\n        state.googleId = data.googleId\n        this.setState(state)\n    }\n\n    renderLogin() {\n        return <div style={{margin:\"auto\", width:\"200px\", paddingTop:\"200px\"}}>\n            <GoogleLogin\n                clientId=\"662193159992-4fv4hq3q25mkerlt0eqqr1ii670ogugr.apps.googleusercontent.com\"\n                onSuccess={this.loginSuccess.bind(this)}\n                isSignedIn={true}\n            />\n        </div>\n    }\n\n    renderGame() {\n        let size = 50;\n        return <div>\n            <Player\n                size={size}\n                background={this.background}\n                objects={this.objects}\n                ref={this.player}\n                app={this}\n                objectEventBus={this.objectEventBus}\n                accessToken={this.state.accessToken}\n                googleId={this.state.googleId}\n            />\n            <Background\n                size={size}\n                ref={this.background}\n                app={this}\n            />\n            <Objects\n                size={size}\n                objectEventBus={this.objectEventBus}\n                player={this.player}\n                ref={this.objects}\n            />\n            <Chat/>\n        </div>;\n    }\n\n    render(){\n        if(this.state.accessToken === null){\n            return this.renderLogin()\n        }\n        return this.renderGame()\n    }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}