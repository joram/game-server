{"version":3,"sources":["utils.js","web_socket.js","components/player.js","components/background.js","components/monsters.js","components/chat.js","components/player_editor.js","App.js","serviceWorker.js","index.js"],"names":["hostname","window","location","href","split","ws_prefix","http_prefix","sleep","ms","Promise","resolve","setTimeout","web_socket_connection","this","objectEventBus","require","url","console","log","ws","WebSocket","onopen","onmessage","evt","message","JSON","parse","data","processMessage","onclose","a","id","email","firstName","lastName","waitForConn","s","send","d","callback","readyState","msg","undefined","emit","Player","state","playerPosition","x","y","debouncedMovePlayer","_","debounce","key","e","wait","movePlayer","leading","maxWait","on","setState","nextPlayerPosition","type","props","background","current","updateChunks","as","app","setPage","sendPlayerMove","handleKeys","onKeyEvent","children","React","Component","Square","pixel","g","p","color","r","b","isSolid","style","width","height","left","chunkPosition","top","backgroundColor","position","Chunk","SIZE","chunk","pixels","forEach","push","squaresTall","Math","ceil","innerHeight","squaresWide","innerWidth","offsetX","floor","offsetY","className","border","size","backgroundSquares","Background","CHUNKSIZE","chunkData","objects","fetch","then","res","json","pp","minX","minY","maxX","maxY","chunksWide","chunksTall","xIndex","Array","keys","yIndex","requestChunk","solid","chunks","Object","Monster","monster","images","src","length","alt","zIndex","Monsters","monsters","object","action","values","makeObject","o","player","uuidv4","v4","ChatMessage","from","substr","Chat","messages","text","preventDefault","event","target","value","i","onSubmit","sendMessage","bind","bottom","onChange","textChange","SlotTypes","1","2","3","4","5","6","7","8","BACKPACK","GROUND","PlayerEditor","sendBackpackRequest","textAlign","float","DndProvider","backend","HTML5Backend","DraggableItem","useDrag","item","allowed_slot","end","monitor","dropResult","getDropResult","name","unequipItem","dropItem","equipItem","collect","isDragging","drag","preview","DragPreviewImage","connect","dropped_image","ref","ItemSlot","useDrop","accept","slot","drop","isOver","canDrop","BackpackSlot","GroundSlot","Backpack","items","PlayerEditorEquip","equipped_slot","silhouette_style","equipped_image","transform","right","Ground","App","accessToken","googleId","page","createRef","profileObj","givenName","familyName","sendAccessToken","margin","paddingTop","clientId","onSuccess","loginSuccess","isSignedIn","renderLogin","renderGame","renderInventory","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.189fe49e.chunk.js","sourcesContent":["function hostname() {\n    let hostname = window.location.href.split(\"/\")[2]\n    if(hostname===\"localhost:3000\"){\n        return \"localhost:2305\"\n    }\n    return hostname\n}\n\nfunction ws_prefix() {\n    if(hostname()===\"localhost:2305\"){\n        return \"ws\"\n    }\n    return \"wss\"\n}\n\nfunction http_prefix() {\n    if(hostname()===\"localhost:2305\"){\n        return \"http\"\n    }\n    return \"https\"\n}\n\nexport {hostname, ws_prefix, http_prefix}","import {hostname, ws_prefix} from \"./utils\";\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nclass WebSocketConnection {\n\n    sendAccessToken(a,id, email,firstName, lastName){\n        this.waitForConn(\n            () => {\n                let s = `{\"accessToken\":\"${a}\", \"googleId\":\"${id}\", \"email\":\"${email}\", \"firstName\":\"${firstName}\", \"lastName\":\"${lastName}\"}`\n                this.ws.send(s)\n            })\n    }\n\n    sendBackpackRequest(){\n        this.waitForConn(\n            () => {\n                this.ws.send(`{\"backpack\":\"please\"}`)\n            }\n        )\n\n    }\n\n    sendPlayerMove(d){\n        this.waitForConn(\n            () => {\n                this.ws.send(`{\"direction\":\"${d}\"}`)\n            })\n    }\n\n    equipItem(id) {\n        this.waitForConn(\n            () => {\n                this.ws.send(`{\"equip_item\":${id}}`)\n            })\n    }\n\n    unequipItem(id) {\n        this.waitForConn(\n            () => {\n                this.ws.send(`{\"unequip_item\":${id}}`)\n            })\n    }\n\n    dropItem(id) {\n        this.waitForConn(\n            () => {\n                this.ws.send(`{\"drop_item\":${id}}`)\n            })\n    }\n\n    async waitForConn(callback){\n        while(this.ws.readyState !== 1){\n            await sleep(1);\n        }\n        callback()\n    }\n\n    processMessage(msg) {\n        // item\n        if(msg[\"equipped_image\"] !== undefined){\n            this.objectEventBus.emit(\"item\", null, msg)\n        }\n\n        // player-id\n        else if(msg[\"playerId\"] !== undefined){\n            this.objectEventBus.emit(\"player_id\", null, msg)\n        }\n\n        // monster update\n        else if(msg[\"type\"] !== undefined){\n            this.objectEventBus.emit(\"monster\", null, msg)\n\n        } else {\n            console.log(\"unknown msg\", msg)\n        }\n\n    }\n\n    constructor() {\n        this.objectEventBus = require('js-event-bus')();\n\n        let url = `${ws_prefix()}://${hostname()}/objects`\n        console.log(url)\n        this.ws = new WebSocket(url)\n\n        this.ws.onopen = () => {\n            console.log('connected to generic ws')\n        }\n\n        this.ws.onmessage = evt => {\n            const message = JSON.parse(evt.data)\n            this.processMessage(message)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected generic ws')\n        }\n    }\n}\n\n\nlet web_socket_connection = new WebSocketConnection()\n\nexport default web_socket_connection","import React from \"react\";\nimport _ from \"lodash\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport web_socket_connection from \"../web_socket\";\n\n\nclass Player extends React.Component {\n\n    state = {\n        id: undefined,\n        playerPosition: {x: 0, y: 0},\n    }\n\n\n    componentDidMount() {\n        web_socket_connection.objectEventBus.on(\"player_id\", (msg) => {\n            let state = this.state\n            state.id = msg[\"playerId\"]\n            this.setState(state)\n        })\n\n        web_socket_connection.objectEventBus.on(\"monster\", (msg) => {\n            if(msg[\"id\"] === this.state.id) {\n                let state = this.state\n                state.playerPosition.x = msg[\"x\"]\n                state.playerPosition.y = msg[\"y\"]\n                this.setState(state)\n            }\n\n            let state = this.state\n            let nextPlayerPosition = state.playerPosition\n            if(msg.type===\"player\"){\n                state.playerPosition = nextPlayerPosition\n                state.nextPlayerPosition = nextPlayerPosition\n                this.setState(state)\n                this.props.background.current.updateChunks()\n\n                let as = this.props.app.state;\n                as.playerPosition = nextPlayerPosition\n                this.props.app.setState(as)\n            }\n        })\n    }\n\n    movePlayer(key, e) {\n        if (key === \"e\") {\n            this.props.app.setPage(\"inventory\")\n        } else {\n            if (key === \"w\") key = \"up\"\n            if (key === \"a\") key = \"left\"\n            if (key === \"s\") key = \"down\"\n            if (key === \"d\") key = \"right\"\n            this.props.background.current.updateChunks()\n            web_socket_connection.sendPlayerMove(key)\n        }\n    }\n\n    debouncedMovePlayer = _.debounce( (key, e, wait) => {\n        this.movePlayer(key, e)\n    }, 350, {leading:true, maxWait:350})\n\n    render(){\n        return <>\n            <KeyboardEventHandler\n                handleKeys={[\"left\", \"right\", \"up\", \"down\", \"w\", \"a\", \"s\", \"d\", \"e\"]}\n                onKeyEvent={(key, e) => {\n                    this.debouncedMovePlayer(key, e, 100)\n                }}\n            />\n            { this.props.children }\n        </>\n    }\n}\n\nexport default Player","import React from \"react\";\nimport {hostname, http_prefix} from \"../utils\";\n\nclass Square extends React.Component {\n\n    isSolid(){\n        return this.props.pixel.g > 180\n    }\n\n    render() {\n        let p = this.props.pixel\n        let color = `rgb(${p.r}, ${p.g}, ${p.b})`\n        if (this.isSolid()) {\n            color = `rgb(0, 80, 0)`\n        }\n        return <div style={{\n                width: \"50px\",\n                height: \"50px\",\n                left: `${50*(p.x-this.props.chunkPosition.x)}px`,\n                top: `${50*(p.y-this.props.chunkPosition.y)}px`,\n                backgroundColor: color,\n                position: \"absolute\"\n            }}>\n                {/*({p.x}, {p.y})*/}\n            </div>\n    }\n}\n\nclass Chunk extends React.Component {\n    SIZE = 50;\n    chunk = {}\n    state = {}\n\n    backgroundSquares() {\n        let pixels = []\n        // if(this.chunk.pixels === null || this.chunk.pixels === undefined) { return [] }\n        this.props.data.pixels.forEach(pixel => {\n\n            pixels.push(<Square\n                key={pixel.x+\"_\"+pixel.y}\n                pixel={pixel}\n                chunkPosition={{x:this.props.data.x, y:this.props.data.y}}\n                playerPosition={this.props.playerPosition}\n            />)\n        })\n        return pixels\n    }\n\n    render() {\n        let x = this.props.x\n        let y = this.props.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n\n        return <div className=\"chunk\" style={{\n            // zIndex: \"0\",\n            position: \"absolute\",\n            border:\"solid thin black\",\n            width: `${this.SIZE*this.chunk.size}px`,\n            height: `${this.SIZE*this.chunk.size}px`,\n            backgroundColor: \"pink\",\n            left: size*(x+offsetX)+\"px\",\n            top: size*(y+offsetY)+\"px\",\n\n        }}>\n            <div className=\"squares\">{this.backgroundSquares()}</div>\n        </div>\n    }\n}\n\nclass Background extends React.Component {\n\n    CHUNKSIZE = 10\n\n    state = {\n        playerPosition: {x:-99, y:-99},\n        chunkData: {},\n    }\n\n    componentDidMount(props) {\n        this.updateChunks()\n    }\n\n    requestChunk(x, y) {\n        if (this.state.chunkData[`${x}_${y}`] !== undefined ){\n            return\n        }\n\n        // so we don't request again\n        let state = this.state\n        state.chunkData[`${x}_${y}`] = {pixels:[], objects:[]}\n        this.setState(state)\n\n        let url = `${http_prefix()}://${hostname()}/chunks?x=${x}&y=${y}`\n        fetch(url)\n            .then(res => res.json())\n            .then(chunkData => {\n                let state = this.state\n                state.chunkData[`${x}_${y}`] = chunkData\n                this.setState(state)\n            });\n    }\n\n    updateChunks(){\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n\n        let pp = this.playerPosition()\n        let minX = Math.floor(pp.x - squaresWide/2)\n        let minY = Math.floor(pp.y - squaresTall/2)\n        let maxX = Math.ceil(pp.x + squaresWide/2)\n        let maxY = Math.ceil(pp.y + squaresTall/2)\n\n        minX = minX - minX%this.CHUNKSIZE - this.CHUNKSIZE\n        minY = minY - minY%this.CHUNKSIZE - this.CHUNKSIZE\n        maxX = maxX + maxX%this.CHUNKSIZE + this.CHUNKSIZE\n        maxY = maxY + maxY%this.CHUNKSIZE + this.CHUNKSIZE\n\n        let chunksWide = Math.ceil((maxX-minX)/this.CHUNKSIZE)\n        let chunksTall = Math.ceil((maxY-minY)/this.CHUNKSIZE)\n\n        let xIndex = [...Array(chunksWide).keys()]\n        let yIndex = [...Array(chunksTall).keys()]\n        xIndex.forEach(x => {\n            yIndex.forEach(y => {\n                if (this.state.chunkData[`${x}_${y}`] === undefined ){\n                    this.requestChunk(minX+x*this.CHUNKSIZE,minY+y*this.CHUNKSIZE)\n                }\n           })\n        })\n    }\n\n    playerPosition() {\n        return this.props.app.playerPosition()\n    }\n\n    isSolidAt(p){\n\n        let x = Math.floor(p.x/this.CHUNKSIZE)*this.CHUNKSIZE\n        let y = Math.floor(p.y/this.CHUNKSIZE)*this.CHUNKSIZE\n        let chunk = this.state.chunkData[`${x}_${y}`]\n        if(chunk === undefined) {\n            return false\n        }\n        let solid = false\n\n        chunk.pixels.forEach(pixel => {\n            if(Math.ceil(p.x) === pixel.x && Math.ceil(p.y) === pixel.y){\n                if(pixel.g > 180){\n                    solid = true\n                }\n            }\n        })\n\n        // chunk.objects.forEach(object => {\n        //     if(Math.ceil(p.x) === object.x && Math.ceil(p.y) === object.y){\n        //          if(object.solid){\n        //             solid = true\n        //         }\n        //     }\n        // })\n\n        return solid\n    }\n\n    render() {\n        let chunks = [];\n        let keys = Object.keys(this.state.chunkData)\n        keys.forEach(key => {\n            let chunkData = this.state.chunkData[key]\n            let chunk = <Chunk\n                x={chunkData.x}\n                y={chunkData.y}\n                key={key}\n                playerPosition={this.playerPosition()}\n                data={chunkData}\n                objectEventBus={this.props.objectEventBus}\n            />;\n            chunks.push(chunk)\n        })\n\n        return (<div id=\"chunks\">\n            {chunks}\n        </div>);\n    }\n}\n\nexport default Background","import React from \"react\";\nimport {hostname, http_prefix} from \"../utils\";\nimport web_socket_connection from \"../web_socket\";\n\nclass Monster extends React.Component {\n\n    state = {\n        monster: {x:0, y:0}\n    }\n\n    isSolid(){\n        return this.props.monster.solid\n    }\n\n    constructor(props) {\n        super(props);\n        this.state.monster = props.monster\n    }\n\n    componentDidMount(){\n        web_socket_connection.objectEventBus.on(\"monster\", monster => {\n            if(this.props.id === monster.id){\n                let state = this.state\n                state.monster = monster\n                this.setState(state)\n            }\n        })\n    }\n\n    render() {\n        let p = this.state.monster\n        let s = this.props.size\n        let x = p.x\n        let y = p.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n\n        let images = []\n        p.images.forEach(src => {\n            images.push(<img style={{\n                width: `${s}px`,\n                height: `${s}px`,\n                position: \"absolute\",\n                left: \"0px\",\n                top: \"0px\",\n            }}\n                 key={`${p.id}_img_${images.length}`}\n                 src={`${http_prefix()}://${hostname()}${src}`}\n                 alt={this.props.monster.type}\n            />)\n\n        })\n        return <div style={{\n            position: \"absolute\",\n            width: s+\"px\",\n            height: s+\"px\",\n            zIndex: this.props.zIndex,\n            left:s*(x+offsetX)+\"px\",\n            top:s*(y+offsetY)+\"px\",\n        }}>\n            {images}\n        </div>\n    }\n}\n\nclass Monsters extends React.Component {\n    SIZE = 50\n\n    state = {\n        monsters: {}\n    }\n\n    componentDidMount(){\n        web_socket_connection.objectEventBus.on(\"monster\", object => {\n            let state = this.state\n            if (object.action === \"remove\") {\n                delete state.monsters[object.id]\n            } else {\n                state.monsters[object.id] = object\n            }\n            this.setState(state)\n        })\n    }\n\n    isSolidAt(p){\n        let solid = false\n        Object.values(this.state.monsters).forEach(monster => {\n            if(Math.ceil(p.x) === monster.x && Math.ceil(p.y) === monster.y){\n                 solid = solid || monster.solid\n            }\n        })\n        console.log(solid)\n        return solid\n    }\n\n    render() {\n\n        let playerPosition = {x:0, y:0}\n        if(this.props.player.current !== null){\n            playerPosition = this.props.player.current.state.playerPosition\n        }\n\n        function makeObject(o, size, objectEventBus) {\n            return <Monster\n                monster={o}\n                key={o.id}\n                id={o.id}\n                size={size}\n                objectEventBus={objectEventBus}\n                playerPosition={playerPosition}\n            />\n        }\n\n        let objects = [];\n        Object.values(this.state.monsters).forEach(o => {\n            if(o.type !== \"player\"){\n                objects.push(makeObject(o, this.SIZE, this.props.objectEventBus))\n            }\n        })\n        Object.values(this.state.monsters).forEach(o => {\n            if(o.type === \"player\"){\n                objects.push(makeObject(o, this.SIZE, this.props.objectEventBus))\n            }\n        })\n        return <div className=\"objects\">\n            {objects}\n        </div>\n    }\n\n\n}\n\nexport default Monsters","import React from \"react\";\nimport {hostname, ws_prefix} from \"../utils\";\n\nconst { v4: uuidv4 } = require('uuid');\n\nclass ChatMessage extends React.Component {\n\n    render(){\n        return <div className=\"chat_message\" style={{color:\"white\"}}>{this.props.message.from.substr(1, 6)}: {this.props.message.message}</div>\n    }\n}\n\nclass Chat extends React.Component {\n    id = uuidv4();\n    ws = new WebSocket(`${ws_prefix()}://${hostname()}/chat`)\n    state = {\n        messages: [],\n        text: \"\",\n    }\n\n    componentDidMount() {\n        this.ws.onopen = () => {\n            // on connecting, do nothing but log it to the console\n            this.ws.send(`{\"id\":\"${this.id}\", \"message\":\"logged in\"}`)\n        }\n\n        this.ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const message = JSON.parse(evt.data)\n            let state = this.state\n            state.messages.push(message)\n            this.setState(state)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n        }\n    }\n\n    sendMessage(e, msg){\n        e.preventDefault();\n        console.log(this.state.text)\n        this.ws.send(`{\"id\":\"${this.id}\", \"message\":\"${this.state.text}\"}`)\n        let state = this.state\n        state.text = \"\"\n        this.setState(state)\n    }\n\n    textChange(event) {\n        let state = this.state\n        state.text = event.target.value\n        this.setState(state)\n    }\n\n    render(){\n        let messages = [];\n        this.state.messages.forEach((msg, i) => {\n            messages.push(<ChatMessage key={`msg_${i}`} message={msg} />)\n        })\n\n        return <div style={{\n            width:\"300px\",\n            height:\"500px\",\n            backgroundColor: \"rgba(20,20,20,0.8)\",\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n        }} >\n            <div style={{color:\"white\"}}>you are {this.id.substr(1, 6)}</div>\n            <div>\n                {messages}\n            </div>\n            <form onSubmit={this.sendMessage.bind(this)}>\n                <input type=\"text\"\n                       style={{\n                           bottom: \"6px\",\n                           left: \"5px\",\n                           width: \"185px\",\n                           position: \"absolute\"\n                       }}\n                       onChange={this.textChange.bind(this)}\n                       value={this.state.text}\n                />\n            </form>\n        </div>\n    }\n}\n\nexport default Chat","import React from \"react\";\nimport web_socket_connection from \"../web_socket\"\nimport { DndProvider,DragPreviewImage } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { useDrag } from 'react-dnd'\nimport { useDrop } from 'react-dnd'\nimport {hostname, http_prefix} from \"../utils\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\n\nconst SlotTypes = {\n    1: \"s1\",\n    2: \"s2\",\n    3: \"s3\",\n    4: \"s4\",\n    5: \"s5\",\n    6: \"s6\",\n    7: \"s7\",\n    8: \"s8\",\n    BACKPACK: \"backpack\",\n    GROUND: \"ground\",\n}\n\nclass PlayerEditor extends React.Component {\n\n    constructor(props) {\n        super(props);\n        web_socket_connection.sendBackpackRequest()\n    }\n\n    render() {\n        return <>\n            <div style={{textAlign:\"center\"}}>\n                <div style={{float:\"left\", width:\"300px\"}}>Equipped</div>\n                <div style={{float:\"left\", width:\"300px\"}}>Backpack</div>\n                <div style={{float:\"left\", width:\"300px\"}}>Ground</div>\n            </div>\n            <div  style={{top:\"20px\", position: \"absolute\"}} >\n                <DndProvider backend={HTML5Backend}>\n                    <PlayerEditorEquip />\n                    <Backpack />\n                    <Ground />\n                </DndProvider>\n            </div>\n            <KeyboardEventHandler\n                handleKeys={[\"esc\", \"e\"]}\n                onKeyEvent={(key, e) => {\n                    this.props.app.setPage(\"game\")\n                }}\n            />\n        </>\n    }\n}\n\n\nfunction DraggableItem(props) {\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: { type: SlotTypes[props.item.allowed_slot] },\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult()\n            if (item && dropResult) {\n                if(dropResult.name === \"backpack\") {\n                    web_socket_connection.unequipItem(props.item.id)\n                } else if(dropResult.name === \"ground\"){\n                    web_socket_connection.dropItem(props.item.id)\n                } else {\n                    web_socket_connection.equipItem(props.item.id)\n                }\n            }\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    })\n    return <>\n        <DragPreviewImage connect={preview} src={props.item.dropped_image} />\n        <div ref={drag} style={{...props.style}}>\n            <img src={`${http_prefix()}://${hostname()}/${props.item.dropped_image}`} alt={props.item.name} />\n        </div>\n    </>\n}\n\n\nfunction ItemSlot(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: SlotTypes[props.slot],\n        drop: () => ({ name: `slot ${props.slot}` }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    })\n    const isActive = canDrop && isOver\n    let backgroundColor = '#222'\n    if (isActive) {\n        backgroundColor = 'darkgreen'\n    } else if (canDrop) {\n        backgroundColor = 'darkkhaki'\n    }\n\n    let item = null\n    if(props.item !== undefined) {\n        item = <DraggableItem item={props.item} style={{...props.style, top:\"10px\", left:\"10px\"}}/>\n    }\n\n    return <>\n        <div ref={drop} style={{...props.style, backgroundColor }}>\n            <img style={{\n                width:\"50px\",\n                height: \"50px\",\n            }}\n                 src={`${http_prefix()}://${hostname()}/images/gui/tab_unselected.png`}\n                 alt={`slot ${props.slot}`}\n            />\n        </div>\n        {item}\n    </>\n}\n\n\nfunction BackpackSlot(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: Object.values(SlotTypes),\n        drop: () => ({ name: `backpack` }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    })\n    const isActive = canDrop && isOver\n    let backgroundColor = '#222'\n    if (isActive) {\n        backgroundColor = 'darkgreen'\n    } else if (canDrop) {\n        backgroundColor = 'darkkhaki'\n    }\n\n    let item = null\n\n    return <>\n        <div ref={drop} style={{width:\"100%\", height:\"100%\", border:\"solid thin black\", backgroundColor }}>\n        </div>\n        {item}\n    </>\n}\n\nfunction GroundSlot(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: Object.values(SlotTypes),\n        drop: () => ({ name: `ground` }),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    })\n    const isActive = canDrop && isOver\n    let backgroundColor = '#222'\n    if (isActive) {\n        backgroundColor = 'darkgreen'\n    } else if (canDrop) {\n        backgroundColor = 'darkkhaki'\n    }\n\n    let item = null\n\n    return <>\n        <div ref={drop} style={{width:\"100%\", height:\"100%\", border:\"solid thin black\", backgroundColor }}>\n        </div>\n        {item}\n    </>\n}\n\nclass Backpack extends React.Component {\n\n    state = {\n        items: {}\n    }\n\n    componentDidMount() {\n        web_socket_connection.objectEventBus.on(\"item\", item => {\n            let state = this.state\n            if(item[\"is_carried\"] && !item[\"is_equipped\"]) {\n                state.items[item.id] = item\n            } else {\n                delete state.items[item.id]\n            }\n            this.setState(state)\n        })\n    }\n\n    render() {\n        let items = []\n        Object.values(this.state.items).forEach( item => {\n            items.push(<DraggableItem item={item} key={item.id}/>)\n        })\n        return <div style={{left:\"300px\", width: \"300px\", height: \"290px\", position: \"absolute\", border: \"solid thin black\"}}>\n            <BackpackSlot />\n            <div style={{position:\"absolute\", top:0, left:0}}>\n                {items}\n            </div>\n        </div>\n    }\n}\n\nclass PlayerEditorEquip extends React.Component {\n\n    state = {\n        items: {}\n    }\n\n    componentDidMount() {\n        web_socket_connection.objectEventBus.on(\"item\", item => {\n            let state = this.state\n            if(item[\"is_carried\"] && item[\"is_equipped\"]) {\n                state.items[item.equipped_slot] = item\n            } else {\n                delete state.items[item.allowed_slot]\n            }\n            this.setState(state)\n        })\n    }\n\n    render() {\n        let silhouette_style = {\n            position: \"absolute\",\n            width: \"200px\",\n            height: \"200px\",\n            left:\"50px\",\n            top: \"40px\"\n        }\n        let items = []\n        Object.values(this.state.items).forEach(item => {\n            items.push(<img style={silhouette_style}\n                 src={`${http_prefix()}://${hostname()}/${item.equipped_image}`}\n                 alt=\"silhouette\"\n                 key={item.id}\n            />)\n        })\n        return <div style={{width:\"300px\", height:\"290px\", position:\"absolute\", border: \"solid thin black\"}}>\n            <img style={silhouette_style}\n                 src={`${http_prefix()}://${hostname()}/images/player/base/human_m.png`}\n                 alt=\"silhouette\"\n            />\n            {items}\n\n            <ItemSlot style={{position: \"absolute\", left: \"0px\"}} slot={1} item={this.state.items[1]}/>\n            <ItemSlot style={{position: \"absolute\", transform: \"scaleX(-1)\", right: \"0px\"}} slot={2} item={this.state.items[2]}/>\n\n            <div style={{position: \"absolute\", top:\"80px\", width:\"100%\"}}>\n                <ItemSlot style={{position: \"absolute\", left: \"0px\"}} slot={3} item={this.state.items[3]}/>\n                <ItemSlot style={{position: \"absolute\", transform: \"scaleX(-1)\", right: \"0px\"}} slot={4} item={this.state.items[4]}/>\n            </div>\n\n            <div style={{position: \"absolute\", top:\"160px\", width:\"100%\"}}>\n                <ItemSlot style={{position: \"absolute\", left: \"0px\"}} slot={5}/>\n                <ItemSlot style={{position: \"absolute\", transform: \"scaleX(-1)\", right: \"0px\"}} slot={6}/>\n            </div>\n\n            <div style={{position: \"absolute\", top:\"240px\", width:\"100%\"}}>\n                <ItemSlot style={{position: \"absolute\", left: \"0px\"}} slot={7}/>\n                <ItemSlot style={{position: \"absolute\", transform: \"scaleX(-1)\", right: \"0px\"}} slot={8}/>\n            </div>\n\n        </div>\n    }\n}\n\nclass Ground extends React.Component {\n\n    state = {\n        items: {}\n    }\n\n    componentDidMount() {\n        web_socket_connection.objectEventBus.on(\"item\", item => {\n            let state = this.state\n            if(!item[\"is_carried\"]) {\n                state.items[item.equipped_slot] = item\n            } else {\n                delete state.items[item.allowed_slot]\n                delete state.items[item.equipped_slot]\n                delete state.items[-1]\n            }\n            this.setState(state)\n        })\n    }\n\n    render() {\n        let items = []\n        Object.values(this.state.items).forEach( item => {\n            items.push(<DraggableItem item={item} key={item.id}/>)\n        })\n        return <div style={{left:\"600px\", width: \"300px\", height: \"290px\", position: \"absolute\", border: \"solid thin black\"}}>\n            <GroundSlot />\n            <div style={{position:\"absolute\", top:0, left:0}}>\n                {items}\n            </div>\n        </div>\n    }\n}\n\nexport default PlayerEditor","import React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport './App.css';\nimport Player from \"./components/player\";\nimport Background from \"./components/background\";\nimport Monsters from \"./components/monsters\";\nimport Chat from \"./components/chat\";\nimport PlayerEditor from \"./components/player_editor\";\nimport web_socket_connection from \"./web_socket\"\n\nclass App extends React.Component {\n\n    state = {\n        accessToken: null,\n        googleId: null,\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        page: \"game\",\n    }\n\n    constructor(props) {\n        super(props);\n        this.background = React.createRef();\n        this.objects = React.createRef();\n        this.player = React.createRef();\n        // this.objectEventBus = require('js-event-bus')();\n    }\n\n    playerPosition() {\n        if(this.player.current===null){\n            return {x:0, y:0}\n        }\n        return this.player.current.state.playerPosition\n    }\n\n    loginSuccess(data){\n        let state = this.state\n        state.accessToken = data.accessToken\n        state.googleId = data.googleId\n        state.firstName = data.profileObj.givenName\n        state.lastName = data.profileObj.familyName\n        state.email = data.profileObj.email\n        web_socket_connection.sendAccessToken(state.accessToken, state.googleId, state.email, state.firstName, state.lastName)\n        this.setState(state)\n    }\n\n    renderLogin() {\n        return <div style={{margin:\"auto\", width:\"200px\", paddingTop:\"200px\"}}>\n            <GoogleLogin\n                clientId=\"662193159992-4fv4hq3q25mkerlt0eqqr1ii670ogugr.apps.googleusercontent.com\"\n                onSuccess={this.loginSuccess.bind(this)}\n                isSignedIn={true}\n            />\n        </div>\n    }\n\n    setPage(name){\n        let state = this.state\n        state.page = name\n        console.log(state)\n        this.setState(state)\n    }\n\n    renderGame() {\n        let size = 50;\n        return <>\n            <Player\n                size={size}\n                background={this.background}\n                objects={this.objects}\n                ref={this.player}\n                app={this}\n                // objectEventBus={this.objectEventBus}\n                accessToken={this.state.accessToken}\n                googleId={this.state.googleId}\n                email={this.state.email}\n                firstName={this.state.firstName}\n                lastName={this.state.lastName}\n            />\n            <Background\n                size={size}\n                ref={this.background}\n                app={this}\n            />\n            <Monsters\n                size={size}\n                // objectEventBus={this.objectEventBus}\n                player={this.player}\n                ref={this.objects}\n            />\n            <Chat/>\n        </>;\n    }\n\n    renderInventory(){\n        return <PlayerEditor\n            app={this}\n            player={this.player}\n            accessToken={this.state.accessToken}\n            googleId={this.state.googleId}\n            email={this.state.email}\n            firstName={this.state.firstName}\n            lastName={this.state.lastName}\n        />\n    }\n\n    render(){\n        if(this.state.accessToken === null)\n            return this.renderLogin()\n        if(this.state.page===\"game\")\n            return this.renderGame()\n        if(this.state.page===\"inventory\")\n            return this.renderInventory()\n        return null\n    }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}