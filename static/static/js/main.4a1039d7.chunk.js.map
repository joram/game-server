{"version":3,"sources":["utils.js","components/player.js","components/background.js","components/objects.js","components/chat.js","App.js","serviceWorker.js","index.js"],"names":["hostname","window","location","href","split","ws_prefix","http_prefix","Player","state","playerPosition","x","y","nextPlayerPosition","debouncedMovePlayer","_","debounce","key","e","wait","movePlayer","leading","maxWait","a","id","s","this","ws","send","p","url","console","log","WebSocket","onopen","sendAccessToken","props","accessToken","googleId","sendPlayerCoordinates","onmessage","evt","message","JSON","parse","data","objectEventBus","emit","onclose","move","position","offset","includes","isSolid","background","current","isSolidAt","objects","x_units","Math","round","y_units","setState","updateChunks","as","app","handleKeys","onKeyEvent","children","React","Component","Square","pixel","g","color","r","b","style","width","height","left","chunkPosition","top","backgroundColor","Chunk","SIZE","chunk","pixels","forEach","push","squaresTall","ceil","innerHeight","squaresWide","innerWidth","offsetX","floor","offsetY","className","border","size","backgroundSquares","Background","CHUNKSIZE","chunkData","undefined","fetch","then","res","json","pp","minX","minY","maxX","maxY","chunksWide","chunksTall","xIndex","Array","keys","yIndex","requestChunk","solid","chunks","Object","GameObject","object","on","images","src","length","alt","type","zIndex","Objects","action","values","makeObject","o","player","uuidv4","require","v4","ChatMessage","from","substr","Chat","messages","text","msg","preventDefault","event","target","value","i","onSubmit","sendMessage","bind","bottom","onChange","textChange","App","createRef","margin","paddingTop","clientId","onSuccess","loginSuccess","isSignedIn","renderLogin","ref","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4a1039d7.chunk.js","sourcesContent":["function hostname() {\n    let hostname = window.location.href.split(\"/\")[2]\n    if(hostname===\"localhost:3000\"){\n        return \"localhost:2305\"\n    }\n    return hostname\n}\n\nfunction ws_prefix() {\n    if(hostname()===\"localhost:2305\"){\n        return \"ws\"\n    }\n    return \"wss\"\n}\n\nfunction http_prefix() {\n    if(hostname()===\"localhost:2305\"){\n        return \"http\"\n    }\n    return \"https\"\n}\n\nexport {hostname, ws_prefix, http_prefix}","import React from \"react\";\nimport _ from \"lodash\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport {hostname, ws_prefix} from \"../utils\";\n\nclass Player extends React.Component {\n\n    state = {\n        playerPosition: {x: 0, y: 0},\n        nextPlayerPosition: {x: 0, y: 0}\n    }\n\n    sendAccessToken(a,id){\n        let s = `{\"accessToken\":\"${a}\", \"googleId\":\"${id}\"}`\n        this.ws.send(s)\n    }\n\n    sendPlayerCoordinates(p){\n        let s = `{\"x\":${p.x}, \"y\":${p.y}}`\n        this.ws.send(s)\n    }\n\n    componentDidMount() {\n        let url = `${ws_prefix()}://${hostname()}/objects`\n        console.log(url)\n        this.ws = new WebSocket(url)\n\n        this.ws.onopen = () => {\n            // on connecting, do nothing but log it to the console\n            console.log('connected to objects ws')\n            this.sendAccessToken(this.props.accessToken, this.props.googleId)\n            this.sendPlayerCoordinates(this.state.playerPosition)\n        }\n\n        this.ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const message = JSON.parse(evt.data)\n            this.props.objectEventBus.emit(\"object-update\", null, message)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n        }\n    }\n\n    movePlayer(key, e) {\n        let offset = 1\n        let nextPlayerPosition = {x: this.state.playerPosition.x, y: this.state.playerPosition.y}\n\n        function move(position, key, offset) {\n            if ([\"left\",\"a\"].includes(key)) {\n                position.x -= offset\n            }\n            if (key === \"right\" || key === \"d\") {\n                position.x += offset\n            }\n            if (key === \"up\" || key === \"w\") {\n                position.y -= offset\n            }\n            if (key === \"down\" || key === \"s\") {\n                position.y += offset\n            }\n\n            return position\n        }\n\n        if([\"left\", \"a\", \"up\", \"w\"].includes(key)) {\n            nextPlayerPosition = move(nextPlayerPosition, key, 1)\n        }\n        nextPlayerPosition = move(nextPlayerPosition, key, offset/2)\n        let isSolid = this.props.background.current.isSolidAt(nextPlayerPosition)\n        isSolid = isSolid || this.props.objects.current.isSolidAt(nextPlayerPosition)\n\n        nextPlayerPosition = move(nextPlayerPosition, key, offset/2)\n        if([\"left\", \"a\", \"up\", \"w\"].includes(key)) {\n            nextPlayerPosition = move(nextPlayerPosition, key, -1)\n        }\n\n        let x_units = Math.round(nextPlayerPosition.x/offset)\n        let y_units = Math.round(nextPlayerPosition.y/offset)\n        nextPlayerPosition.x = x_units*offset\n        nextPlayerPosition.y = y_units*offset\n\n        if(!isSolid){\n            let state = this.state\n            state.playerPosition = nextPlayerPosition\n            state.nextPlayerPosition = nextPlayerPosition\n            this.setState(state)\n            this.props.background.current.updateChunks()\n\n            let as = this.props.app.state;\n            as.playerPosition = nextPlayerPosition\n            this.props.app.setState(as)\n        }\n\n        this.sendPlayerCoordinates(nextPlayerPosition)\n        // }\n    }\n\n    debouncedMovePlayer = _.debounce( (key, e, wait) => {\n        this.movePlayer(key, e)\n    }, 350, {leading:true, maxWait:350})\n\n    render(){\n        return <>\n            {/*<Circle*/}\n            {/*    x={this.state.playerPosition.x}*/}\n            {/*    y={this.state.playerPosition.y}*/}\n            {/*    playerPosition={this.state.playerPosition} size={this.props.size}/>*/}\n            <KeyboardEventHandler\n                handleKeys={[\"left\", \"right\", \"up\", \"down\", \"w\", \"a\", \"s\", \"d\"]}\n                onKeyEvent={(key, e) => {\n                    this.debouncedMovePlayer(key, e, 100)\n                }}\n            />\n            { this.props.children }\n        </>\n    }\n}\n\nexport default Player","import React from \"react\";\nimport {hostname, http_prefix} from \"../utils\";\n\nclass Square extends React.Component {\n\n    isSolid(){\n        return this.props.pixel.g > 180\n    }\n\n    render() {\n        let p = this.props.pixel\n        let color = `rgb(${p.r}, ${p.g}, ${p.b})`\n        if (this.isSolid()) {\n            color = `rgb(0, 80, 0)`\n        }\n        return <div style={{\n                width: \"50px\",\n                height: \"50px\",\n                left: `${50*(p.x-this.props.chunkPosition.x)}px`,\n                top: `${50*(p.y-this.props.chunkPosition.y)}px`,\n                backgroundColor: color,\n                position: \"absolute\"\n            }}>\n                {/*({p.x}, {p.y})*/}\n            </div>\n    }\n}\n\nclass Chunk extends React.Component {\n    SIZE = 50;\n    chunk = {}\n    state = {}\n\n    backgroundSquares() {\n        let pixels = []\n        // if(this.chunk.pixels === null || this.chunk.pixels === undefined) { return [] }\n        this.props.data.pixels.forEach(pixel => {\n\n            pixels.push(<Square\n                key={pixel.x+\"_\"+pixel.y}\n                pixel={pixel}\n                chunkPosition={{x:this.props.data.x, y:this.props.data.y}}\n                playerPosition={this.props.playerPosition}\n            />)\n        })\n        return pixels\n    }\n\n    render() {\n        let x = this.props.x\n        let y = this.props.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n\n        return <div className=\"chunk\" style={{\n            // zIndex: \"0\",\n            position: \"absolute\",\n            border:\"solid thin black\",\n            width: `${this.SIZE*this.chunk.size}px`,\n            height: `${this.SIZE*this.chunk.size}px`,\n            backgroundColor: \"pink\",\n            left: size*(x+offsetX)+\"px\",\n            top: size*(y+offsetY)+\"px\",\n\n        }}>\n            <div className=\"squares\">{this.backgroundSquares()}</div>\n        </div>\n    }\n}\n\nclass Background extends React.Component {\n\n    CHUNKSIZE = 10\n\n    state = {\n        playerPosition: {x:-99, y:-99},\n        chunkData: {},\n    }\n\n    componentDidMount(props) {\n        this.updateChunks()\n    }\n\n    requestChunk(x, y) {\n        if (this.state.chunkData[`${x}_${y}`] !== undefined ){\n            return\n        }\n\n        // so we don't request again\n        let state = this.state\n        state.chunkData[`${x}_${y}`] = {pixels:[], objects:[]}\n        this.setState(state)\n\n        let url = `${http_prefix()}://${hostname()}/chunks?x=${x}&y=${y}`\n        fetch(url)\n            .then(res => res.json())\n            .then(chunkData => {\n                let state = this.state\n                state.chunkData[`${x}_${y}`] = chunkData\n                this.setState(state)\n            });\n    }\n\n    updateChunks(){\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n\n        let pp = this.playerPosition()\n        let minX = Math.floor(pp.x - squaresWide/2)\n        let minY = Math.floor(pp.y - squaresTall/2)\n        let maxX = Math.ceil(pp.x + squaresWide/2)\n        let maxY = Math.ceil(pp.y + squaresTall/2)\n\n        minX = minX - minX%this.CHUNKSIZE - this.CHUNKSIZE\n        minY = minY - minY%this.CHUNKSIZE - this.CHUNKSIZE\n        maxX = maxX + maxX%this.CHUNKSIZE + this.CHUNKSIZE\n        maxY = maxY + maxY%this.CHUNKSIZE + this.CHUNKSIZE\n\n        let chunksWide = Math.ceil((maxX-minX)/this.CHUNKSIZE)\n        let chunksTall = Math.ceil((maxY-minY)/this.CHUNKSIZE)\n\n        let xIndex = [...Array(chunksWide).keys()]\n        let yIndex = [...Array(chunksTall).keys()]\n        xIndex.forEach(x => {\n            yIndex.forEach(y => {\n                if (this.state.chunkData[`${x}_${y}`] === undefined ){\n                    this.requestChunk(minX+x*this.CHUNKSIZE,minY+y*this.CHUNKSIZE)\n                }\n           })\n        })\n    }\n\n    playerPosition() {\n        return this.props.app.playerPosition()\n    }\n\n    isSolidAt(p){\n\n        let x = Math.floor(p.x/this.CHUNKSIZE)*this.CHUNKSIZE\n        let y = Math.floor(p.y/this.CHUNKSIZE)*this.CHUNKSIZE\n        let chunk = this.state.chunkData[`${x}_${y}`]\n        if(chunk === undefined) {\n            return false\n        }\n        let solid = false\n\n        chunk.pixels.forEach(pixel => {\n            if(Math.ceil(p.x) === pixel.x && Math.ceil(p.y) === pixel.y){\n                if(pixel.g > 180){\n                    solid = true\n                }\n            }\n        })\n\n        // chunk.objects.forEach(object => {\n        //     if(Math.ceil(p.x) === object.x && Math.ceil(p.y) === object.y){\n        //          if(object.solid){\n        //             solid = true\n        //         }\n        //     }\n        // })\n\n        return solid\n    }\n\n    render() {\n        let chunks = [];\n        let keys = Object.keys(this.state.chunkData)\n        keys.forEach(key => {\n            let chunkData = this.state.chunkData[key]\n            let chunk = <Chunk\n                x={chunkData.x}\n                y={chunkData.y}\n                key={key}\n                playerPosition={this.playerPosition()}\n                data={chunkData}\n                objectEventBus={this.props.objectEventBus}\n            />;\n            chunks.push(chunk)\n        })\n\n        return (<div id=\"chunks\">\n            {chunks}\n        </div>);\n    }\n}\n\nexport default Background","import React from \"react\";\nimport {hostname, http_prefix} from \"../utils\";\n\nclass GameObject extends React.Component {\n\n    state = {\n        object: {x:0, y:0}\n    }\n\n    isSolid(){\n        return this.props.object.solid\n    }\n\n    constructor(props) {\n        super(props);\n        this.state.object = props.object\n    }\n\n    componentDidMount(){\n        this.props.objectEventBus.on(\"object-update\", object => {\n            if(this.props.id === object.id){\n                let state = this.state\n                state.object = object\n                this.setState(state)\n            }\n        })\n    }\n\n    render() {\n        let p = this.state.object\n        let s = this.props.size\n        let x = p.x\n        let y = p.y\n        let size = 50;\n        let squaresTall = Math.ceil(window.innerHeight/size);\n        let squaresWide = Math.ceil(window.innerWidth/size);\n        let offsetX = -this.props.playerPosition.x + Math.floor(squaresWide/2)\n        let offsetY = -this.props.playerPosition.y + Math.floor(squaresTall/2)\n\n        let images = []\n        p.images.forEach(src => {\n            images.push(<img style={{\n                width: `${s}px`,\n                height: `${s}px`,\n                position: \"absolute\",\n                left: \"0px\",\n                top: \"0px\",\n            }}\n                 key={`${p.id}_img_${images.length}`}\n                 src={`${http_prefix()}://${hostname()}${src}`}\n                 alt={this.props.object.type}\n            />)\n\n        })\n        return <div style={{\n            position: \"absolute\",\n            width: s+\"px\",\n            height: s+\"px\",\n            zIndex: this.props.zIndex,\n            left:s*(x+offsetX)+\"px\",\n            top:s*(y+offsetY)+\"px\",\n        }}>\n            {images}\n        </div>\n    }\n}\n\nclass Objects extends React.Component {\n    SIZE = 50\n\n    state = {\n        objects: {}\n    }\n\n    componentDidMount(){\n        this.props.objectEventBus.on(\"object-update\", object => {\n            console.log(\"update:\", object)\n            let state = this.state\n            if (object.action === \"remove\") {\n                delete state.objects[object.id]\n            } else {\n                state.objects[object.id] = object\n            }\n            this.setState(state)\n        })\n    }\n\n    isSolidAt(p){\n        let solid = false\n        Object.values(this.state.objects).forEach(object => {\n            if(Math.ceil(p.x) === object.x && Math.ceil(p.y) === object.y){\n                 solid = solid || object.solid\n                 console.log(object)\n            }\n        })\n        console.log(solid)\n        return solid\n    }\n\n    render() {\n\n        let playerPosition = {x:0, y:0}\n        if(this.props.player.current !== null){\n            playerPosition = this.props.player.current.state.playerPosition\n        }\n\n        function makeObject(o, size, objectEventBus) {\n            return <GameObject\n                object={o}\n                key={o.id}\n                id={o.id}\n                size={size}\n                objectEventBus={objectEventBus}\n                playerPosition={playerPosition}\n            />\n        }\n\n        let objects = [];\n        Object.values(this.state.objects).forEach(o => {\n            if(o.type !== \"player\"){\n                objects.push(makeObject(o, this.SIZE, this.props.objectEventBus))\n            }\n        })\n        Object.values(this.state.objects).forEach(o => {\n            if(o.type === \"player\"){\n                objects.push(makeObject(o, this.SIZE, this.props.objectEventBus))\n            }\n        })\n        return <div className=\"objects\">\n            {objects}\n        </div>\n    }\n\n\n}\n\nexport default Objects","import React from \"react\";\nimport {hostname, ws_prefix} from \"../utils\";\n\nconst { v4: uuidv4 } = require('uuid');\n\nclass ChatMessage extends React.Component {\n\n    render(){\n        return <div className=\"chat_message\" style={{color:\"white\"}}>{this.props.message.from.substr(1, 6)}: {this.props.message.message}</div>\n    }\n}\n\nclass Chat extends React.Component {\n    id = uuidv4();\n    ws = new WebSocket(`${ws_prefix()}://${hostname()}/chat`)\n    state = {\n        messages: [],\n        text: \"\",\n    }\n\n    componentDidMount() {\n        this.ws.onopen = () => {\n            // on connecting, do nothing but log it to the console\n            this.ws.send(`{\"id\":\"${this.id}\", \"message\":\"logged in\"}`)\n        }\n\n        this.ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const message = JSON.parse(evt.data)\n            let state = this.state\n            state.messages.push(message)\n            this.setState(state)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n        }\n    }\n\n    sendMessage(e, msg){\n        e.preventDefault();\n        console.log(this.state.text)\n        this.ws.send(`{\"id\":\"${this.id}\", \"message\":\"${this.state.text}\"}`)\n        let state = this.state\n        state.text = \"\"\n        this.setState(state)\n    }\n\n    textChange(event) {\n        let state = this.state\n        state.text = event.target.value\n        this.setState(state)\n    }\n\n    render(){\n        let messages = [];\n        this.state.messages.forEach((msg, i) => {\n            messages.push(<ChatMessage key={`msg_${i}`} message={msg} />)\n        })\n\n        return <div style={{\n            width:\"300px\",\n            height:\"500px\",\n            backgroundColor: \"rgba(20,20,20,0.8)\",\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n        }} >\n            <div style={{color:\"white\"}}>you are {this.id.substr(1, 6)}</div>\n            <div>\n                {messages}\n            </div>\n            <form onSubmit={this.sendMessage.bind(this)}>\n                <input type=\"text\"\n                       style={{\n                           bottom: \"6px\",\n                           left: \"5px\",\n                           width: \"185px\",\n                           position: \"absolute\"\n                       }}\n                       onChange={this.textChange.bind(this)}\n                       value={this.state.text}\n                />\n            </form>\n        </div>\n    }\n}\n\nexport default Chat","import React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport './App.css';\nimport Player from \"./components/player\";\nimport Background from \"./components/background\";\nimport Objects from \"./components/objects\";\nimport Chat from \"./components/chat\";\n\n\nclass App extends React.Component {\n\n    state = {\n        accessToken: null,\n        googleId: null\n    }\n\n    constructor(props) {\n        super(props);\n        this.background = React.createRef();\n        this.objects = React.createRef();\n        this.player = React.createRef();\n        this.objectEventBus = require('js-event-bus')();\n    }\n\n    playerPosition() {\n        if(this.player.current===null){\n            return {x:0, y:0}\n        }\n        return this.player.current.state.playerPosition\n    }\n\n    loginSuccess(data){\n        let state = this.state\n        state.accessToken = data.accessToken\n        state.googleId = data.googleId\n        this.setState(state)\n    }\n\n    renderLogin() {\n        return <div style={{margin:\"auto\", width:\"200px\", paddingTop:\"200px\"}}>\n            <GoogleLogin\n                clientId=\"662193159992-4fv4hq3q25mkerlt0eqqr1ii670ogugr.apps.googleusercontent.com\"\n                onSuccess={this.loginSuccess.bind(this)}\n                isSignedIn={true}\n            />\n        </div>\n    }\n\n    render() {\n        console.log(this.state)\n        if(this.state.accessToken === null){\n            return this.renderLogin()\n        }\n\n        let size = 50;\n        return <div>\n            <Player\n                size={size}\n                background={this.background}\n                objects={this.objects}\n                ref={this.player}\n                app={this}\n                objectEventBus={this.objectEventBus}\n                accessToken={this.state.accessToken}\n                googleId={this.state.googleId}\n            />\n            <Background\n                size={size}\n                ref={this.background}\n                app={this}\n            />\n            <Objects\n                size={size}\n                objectEventBus={this.objectEventBus}\n                player={this.player}\n                ref={this.objects}\n            />\n            <Chat/>\n        </div>;\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}